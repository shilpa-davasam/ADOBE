{"version":3,"sources":["Components/SingleItem.js","Components/AddToCart.js","Components/OrderItem.js","Components/Orders.js","index.js"],"names":["SingleItem","state","sellingPrice","onAddToCart","e","obj","props","item","quantity","updateOrders","this","discount","price","id","img_url","name","discountPrice","type","setState","itemDiscount","strikePrice","className","src","alt","onClick","React","Component","AddToCart","disabledGo","orders","length","resetAddedItem","console","log","items","newItem","addedItem","totalQuantity","reduce","prevQuantity","order","to","disabled","map","index","key","OrderItem","decreaseQuantity","removeOrder","increaseQuantity","deleteOrder","Fragment","Orders","orderContent","total","prevTotal","totalDiscount","prevDiscount","style","clear","App","op","find","push","findIndex","splice","isLoaded","error","axios","get","then","res","data","catch","err","exact","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e203d1a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SingleItem extends React.Component{\r\n  state = {\r\n    sellingPrice: 0\r\n  }\r\n\r\n  componentDidMount(){\r\n    const {discount, id, img_url, name, price, type}  = this.props.item;\r\n    const discountPrice = (price)*(discount/100);\r\n    this.setState({sellingPrice: (price - discountPrice)});\r\n  }\r\n\r\n  onAddToCart = (e) => {\r\n      const {sellingPrice} = this.state;\r\n      const obj = {...this.props.item, sellingPrice, quantity: 1};\r\n      this.props.updateOrders(obj, \"add\");\r\n  }\r\n\r\n  render(){\r\n    const {discount, id, img_url, name, price, type}  = this.props.item;\r\n    let itemDiscount, strikePrice;\r\n\tif(discount > 0){\r\n\t\titemDiscount = <span className=\"discount\">{discount}% off</span>;\r\n\t\tstrikePrice = <strike><span>${price}</span></strike>;\r\n\t}\r\n\telse {\r\n\t\titemDiscount = <span className=\"discount\"></span>\r\n\t\tstrikePrice = null;\r\n\t}\r\n    return(\r\n      <div className=\"item\">\r\n\t\t\t    {itemDiscount}\r\n          <div className=\"image\">\r\n            <img src={img_url} alt=\"Book Cover Not Available\"/>\r\n          </div>\r\n          <div className=\"details\">\r\n              <span className=\"name\">{name}</span>\r\n              {strikePrice}\r\n              <span className=\"price\"> ${this.state.sellingPrice}</span>\r\n              <button onClick={this.onAddToCart} className=\"btn add\">Add To Cart</button>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SingleItem;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//import components\r\nimport SingleItem from './SingleItem';\r\n\r\n//import .scss \r\nimport '../scss/addToCart.scss';\r\n\r\nclass AddToCart extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  componentDidMount(){\r\n    this.props.resetAddedItem();\r\n    console.log(this.props.items);\r\n  }\r\n  //function to disable Go to cart till something added in cart\r\n  disabledGo = () => {\r\n\t  if(this.props.orders.length){\r\n\t\t  return false;\r\n\t  }\r\n\t  else{\r\n\t\t  return true;\r\n\t  }\r\n  }\r\n  \r\n  \r\n  render(){\r\n    const {props: {items, updateOrders, addedItem, orders} } = this;\r\n\t  let newItem;\r\n\t  if(addedItem){\r\n\t\t  //newItem = `${addedItem} added to cart`;\r\n      newItem = <span className=\"item-added btn\">{addedItem} is added to cart</span>\r\n  \t}\r\n\r\n    const totalQuantity = this.props.orders.reduce((prevQuantity, order) => {\r\n\t\t\tprevQuantity = prevQuantity + order.quantity;\r\n\t\t\treturn prevQuantity;\r\n\t\t}, 0);\r\n\r\n    return(\r\n      <div className=\"add-to-cart\">\r\n        <header>\r\n          <hr></hr>\r\n          <div className=\"header-div\">\r\n            <span className=\"all-items\">All Items</span>\r\n            {newItem}\r\n\t\t\t      <Link to=\"/orders\" >\r\n                  <button disabled={this.disabledGo()} className=\"go-to-cart btn\">Go To Cart</button>\r\n       \r\n\t\t\t      </Link>\r\n            <span className=\"total-quantity\">{totalQuantity}</span>\r\n          </div>\r\n          <hr></hr>\r\n        </header>\r\n        <div className=\"items\">\r\n          { items.map((item, index) => <SingleItem key={index} item={item} updateOrders={updateOrders}></SingleItem> )}\r\n        </div>\r\n      \r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default AddToCart;","import React from \"react\";\r\n\r\nclass OrderItem extends React.Component {\r\n  decreaseQuantity = e => {\r\n    const {order} = this.props;\r\n    if(order.quantity > 1){\r\n      this.props.updateOrders(order, \"sub\");\r\n    }\r\n    else if(order.quantity == 1){\r\n      this.props.removeOrder(order);\r\n    }\r\n    \r\n  };\r\n\r\n  increaseQuantity = e => {\r\n    this.props.updateOrders(this.props.order, \"add\");\r\n  };\r\n\r\n  deleteOrder = e => {\r\n    this.props.removeOrder(this.props.order);\r\n  };\r\n\r\n  render() {\r\n    const { order } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"Row\">\r\n          <div className=\"Cell item name\">\r\n            <div className=\"item-image\">\r\n              <img src={order.img_url} alt=\"Book Cover Not Available\" />\r\n            </div>\r\n            <span className=\"item-name\">{order.name}</span>\r\n            <span className=\"item-remove\" onClick={this.deleteOrder}>\r\n              x\r\n            </span>\r\n          </div>\r\n          <div className=\"Cell add-remove-item qty\">\r\n            <button onClick={this.decreaseQuantity}> - </button>\r\n            <span>{order.quantity}</span>\r\n            <button onClick={this.increaseQuantity}> + </button>\r\n          </div>\r\n          <div className=\"Cell item-price price\">\r\n            <p>${order.quantity * order.price}</p>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderItem;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//import components\r\nimport OrderItem from './OrderItem';\r\n\r\n//import scss\r\nimport '../scss/orders.scss';\r\n\r\nclass Orders extends React.Component{\r\n\r\n\t\r\n\t\r\n\trender(){\r\n\t\t\r\n\t\tlet orderContent;\r\n\t\tconst {orders, updateOrders, removeOrder} = this.props;\r\n\t\t\r\n\t\tconst total = this.props.orders.reduce((prevTotal,order) => {\r\n\t\t\tprevTotal = prevTotal + (order.quantity * order.price);\r\n\t\t\treturn prevTotal;\r\n\t\t}, 0 );\r\n\t\tconst totalQuantity = this.props.orders.reduce((prevQuantity, order) => {\r\n\t\t\tprevQuantity = prevQuantity + order.quantity;\r\n\t\t\treturn prevQuantity;\r\n\t\t}, 0);\r\n\t\tconst totalDiscount = this.props.orders.reduce((prevDiscount, order) => {\r\n\t\t\tprevDiscount = prevDiscount + (order.quantity * ((order.price)*(order.discount/100)));\r\n\t\t\treturn prevDiscount;\r\n\t\t}, 0);\r\n\t\t\r\n\t\tif(orders.length){\r\n\t\t\torderContent = orders.map((order, index) => {\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<OrderItem order={order} key={index} updateOrders={updateOrders} removeOrder={removeOrder}/>\r\n\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div className=\"orders\">\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<hr></hr>\r\n\t\t\t\t\t<div>\r\n            <Link to=\"/\">\r\n\t\t\t\t\t\t  <span className=\"go-back\"> &#60; </span>\r\n            </Link>\r\n\t\t\t\t\t\t<span className=\"order-heading\">Order Summary</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<hr></hr>\r\n\t\t\t\t</header>\r\n\t\t\t\t<div className=\"order-summary\">\r\n\t\t\t\t\t<div className=\"Table\">\r\n\t\t\t\r\n\t\t\t\t\t\t<div className=\"Heading\">\r\n\t\t\t\t\t\t\t<div className=\"Cell name\">\r\n\t\t\t\t\t\t\t\t<p>Items</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"Cell qty\">\r\n\t\t\t\t\t\t\t\t<p>Qty</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"Cell price\">\r\n\t\t\t\t\t\t\t\t<p>Price</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n            \r\n\t\t\t\t\t\t\t{orderContent}\r\n\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"order-total\">\r\n          <div className=\"Table\">\r\n            <div className=\"title\">\r\n              Total\r\n            </div>\r\n            <div className=\"Row\">\r\n              <div className=\"Cell\">Items({totalQuantity})</div>\r\n              <div className=\"Cell\">:</div>\r\n              <div className=\"Cell\">${total}</div>\r\n            </div>\r\n            <div className=\"Row\">\r\n              <div className=\"Cell\">Discount</div>\r\n              <div className=\"Cell\">:</div>\r\n              <div className=\"Cell\">-${totalDiscount}</div>\r\n            </div>\r\n            <div className=\"Row\">\r\n              <div className=\"Cell\">Type Discount</div>\r\n              <div className=\"Cell\">:</div>\r\n              <div className=\"Cell\">-$0</div>\r\n            </div>\r\n            <div className=\"Row\">\r\n              <div className=\"Cell\">Order Total</div>\r\n              <div className=\"Cell\">:</div>\r\n              <div className=\"Cell\">${total - totalDiscount}</div>\r\n            </div>\r\n          </div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n        <div style={{clear: \"both\"}}></div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Orders;","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\n//import components\nimport AddToCart from \"./Components/AddToCart\";\nimport Orders from \"./Components/Orders\";\n\nimport \"./style.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      isLoaded: false,\n      error: \"\",\n      orders: [],\n      addedItem: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"https://api.myjson.com/bins/qhnfp\")\n      .then(res => this.setState({ items: res.data, isLoaded: true }))\n      .catch(err => this.setState({ isLoaded: true, error: err }));\n  }\n\n  //update orders in cart\n  updateOrders = (obj, op = \"add\") => {\n    const orders = [...this.state.orders];\n    const order = orders.find(order => order.id === obj.id);\n    if (order) {\n      switch (op) {\n        case \"add\":\n          order.quantity = order.quantity + 1;\n          break;\n        case \"sub\":\n          if (order.quantity > 1) {\n            order.quantity = order.quantity - 1;\n          }\n        \n          break;\n      }\n    } else {\n      orders.push(obj);\n    }\n    this.setState({ orders, addedItem: obj.name });\n    \n  };\n  //remove orders in cart\n  removeOrder = obj => {\n    const orders = [...this.state.orders];\n    const index = orders.findIndex(order => order.id === obj.id);\n    orders.splice(index, 1);\n    this.setState({ orders });\n  };\n  //make added item empty while coming back\n  resetAddedItem = () =>{\n    this.setState({addedItem: \"\"});\n  }\n  render() {\n    const {\n      state: { items, isLoaded, error, orders, addedItem },\n      updateOrders,\n      removeOrder,\n      resetAddedItem\n    } = this;\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else if (error) {\n      return <div>{error}</div>;\n    } else {\n      return (\n        <Router>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <AddToCart\n                  items={items}\n                  updateOrders={updateOrders}\n                  addedItem={addedItem}\n                  orders={orders}\n                  resetAddedItem={resetAddedItem}\n                />\n              )}\n            />\n            <Route\n              path=\"/orders\"\n              render={() => (\n                <Orders\n                  orders={orders}\n                  updateOrders={updateOrders}\n                  removeOrder={removeOrder}\n                />\n              )}\n            />\n          </Switch>\n        </Router>\n      );\n    }\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}